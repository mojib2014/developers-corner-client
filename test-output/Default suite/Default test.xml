<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="10" hostname="AFSWWI9CYZ2H4A" failures="1" tests="16" name="Default test" time="25.078" errors="0" timestamp="2023-01-31T11:34:05 CST">
  <testcase classname="com.developerscorner.client.uiTests.HomePageTest" name="shoulGetHomePage" time="0.118"/>
  <testcase classname="com.developerscorner.client.uiTests.HomePageTest" name="shouldCreateQuestion" time="2.737"/>
  <testcase classname="com.developerscorner.client.uiTests.HomePageTest" name="shouldDisplayFieldIsRequiredIfUsernameNotFilled" time="0.514"/>
  <testcase classname="com.developerscorner.client.uiTests.QuestionsPageTest" name="shouldGetQuestionsPage" time="0.234"/>
  <testcase classname="com.developerscorner.client.uiTests.QuestionsPageTest" name="shouldEditAQuestion" time="0.857"/>
  <testcase classname="com.developerscorner.client.uiTests.QuestionsPageTest" name="shouldDeleteAQuestion" time="2.419"/>
  <testcase classname="com.developerscorner.client.uiTests.QuestionsPageTest" name="shouldDisplayFieldRequiredIfOneOfTheFieldsIsBlank" time="0.655"/>
  <testcase classname="com.developerscorner.client.uiTests.LoginPageTest" name="shouldDisplayFieldRequiredIfEmailNotFilled" time="0.258"/>
  <testcase classname="com.developerscorner.client.uiTests.LoginPageTest" name="shouldGetLoginPage" time="0.082"/>
  <testcase classname="com.developerscorner.client.uiTests.LoginPageTest" name="shouldLogInAUser" time="0.829"/>
  <testcase classname="com.developerscorner.client.uiTests.ProfilePageTest" name="shouldCheckCurrentUserExists" time="0.123">
    <failure type="java.lang.AssertionError" message="expected [testuser] but found []">
      <![CDATA[java.lang.AssertionError: expected [testuser] but found []
at org.testng.Assert.fail(Assert.java:110)
at org.testng.Assert.failNotEquals(Assert.java:1413)
at org.testng.Assert.assertEqualsImpl(Assert.java:149)
at org.testng.Assert.assertEquals(Assert.java:131)
at org.testng.Assert.assertEquals(Assert.java:655)
at org.testng.Assert.assertEquals(Assert.java:665)
at com.developerscorner.client.uiTests.ProfilePageTest.shouldCheckCurrentUserExists(ProfilePageTest.java:50)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- shouldCheckCurrentUserExists -->
  <testcase classname="com.developerscorner.client.uiTests.ProfilePageTest" name="shouldDisplayFieldRequiredIfOnceOfTheFieldsIsBlank" time="0.742"/>
  <testcase classname="com.developerscorner.client.uiTests.ProfilePageTest" name="shouldEditProfile" time="1.08"/>
  <testcase classname="com.developerscorner.client.uiTests.ProfilePageTest" name="shouldGetProfilePage" time="0.193"/>
  <testcase classname="com.developerscorner.client.uiTests.RegisterPageTest" name="shouldRegisterAUser" time="2.969"/>
  <testcase classname="com.developerscorner.client.uiTests.RegisterPageTest" name="shouldDisplayFieldIsRequiredIfOneOfTheFieldIsBlank" time="3.165"/>
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.developerscorner.client.configuration.SeleniumConfig" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
</testsuite> <!-- Default test -->
